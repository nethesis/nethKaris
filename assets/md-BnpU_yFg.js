import{o as t,c as s,k as r,e,aa as l,q as u,s as c,B as n}from"./modules/vue-DSQL4gui.js";import{I as m}from"./slidev/default-DPcF3ZtW.js";import{u as p,f as d}from"./slidev/context-BoG1oF3O.js";import"./index-BDbBdKG-.js";import"./modules/shiki-DQTkENqK.js";const C={__name:"html-css.md__slidev_17",setup(f){const{$slidev:x,$nav:v,$clicksContext:i,$clicks:_,$page:h,$renderContext:z,$frontmatter:a}=p();return i.setup(),(k,o)=>(t(),s(m,u(c(n(d)(n(a),16))),{default:r(()=>o[0]||(o[0]=[e("h1",null,[l("Proprietà "),e("code",null,"display")],-1),e("p",null,"Specifica il modo in cui sarà visualizzato l’elemento. Può assumere svariati valori, i principali sono:",-1),e("ul",null,[e("li",null,[e("code",null,"inline"),l(": l’elemento è posizionato sulla stessa linea degli altri elementi (come "),e("code",null,"<span>"),l("), occupando solo lo spazio necessario. Eventuali proprietà "),e("code",null,"width"),l(" o "),e("code",null,"height"),l(" saranno ignorate")]),e("li",null,[e("code",null,"block"),l(": mostra l’elemento su una nuova linea e di default occupa tutta la larghezza, come "),e("code",null,"<p>"),l(" e "),e("code",null,"<div>")]),e("li",null,[e("code",null,"inline-block"),l(": mostra l’elemento sulla stessa linea come "),e("code",null,"inline"),l(", ma è possible impostare "),e("code",null,"width"),l(" e "),e("code",null,"height")]),e("li",null,[e("code",null,"none"),l(": l’elemento non appare e non sarà presente nell’albero HTML")]),e("li",null,[e("code",null,"flex"),l(": mostra l’elemento come un contenitore flex di tipo block (ne parleremo nelle prossime lezioni)")]),e("li",null,[e("code",null,"inline-flex"),l(": mostra l’elemento come un contenitore flex di tipo inline (ne parleremo nelle prossime lezioni)")])],-1)])),_:1},16))}};export{C as default};
