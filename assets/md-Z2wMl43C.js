import{o as i,c as r,k as s,e,aa as o,q as c,s as u,B as t}from"./modules/vue-DSQL4gui.js";import{I as d}from"./slidev/default-DPcF3ZtW.js";import{u as p,f as m}from"./slidev/context-BoG1oF3O.js";import"./index-BDbBdKG-.js";import"./modules/shiki-DQTkENqK.js";const P={__name:"flexbox.md__slidev_83",setup(g){const{$slidev:f,$nav:x,$clicksContext:a,$clicks:_,$page:v,$renderContext:z,$frontmatter:n}=p();return a.setup(),($,l)=>(i(),r(d,c(u(t(m)(t(n),82))),{default:s(()=>l[0]||(l[0]=[e("h1",null,"Flexbox (2)",-1),e("ul",null,[e("li",null,[o("Immagina di avere una scatola (contenitore) con degli oggetti (elementi) dentro. Come vogliamo disporre questi oggetti all’interno del contenitore? "),e("ul",null,[e("li",null,[o("In riga o in colonna: puoi decidere se gli elementi devono essere disposti uno accanto all’altro (orizzontalmente) o uno sopra l’altro (verticalmente) usando "),e("code",null,"flex-direction")]),e("li",null,[o("Allineamento: puoi centrare gli elementi, spostarli a destra, a sinistra o distribuire lo spazio tra di loro con proprietà come "),e("code",null,"justify-content"),o(" (per l’allineamento orizzontale) e "),e("code",null,"align-items"),o(" (per l’allineamento verticale)")]),e("li",null,[o("Distanza: puoi specificare la distanza minima tra gli elementi usando le proprietà "),e("code",null,"gap"),o(", "),e("code",null,"row-gap"),o(" e "),e("code",null,"column-gap")])])])],-1)])),_:1},16))}};export{P as default};
